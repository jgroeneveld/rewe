// Code generated by MockGen. DO NOT EDIT.
// Source: categories.go

// Package rewe is a generated GoMock package.
package rewe

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCategoryFetcher is a mock of CategoryFetcher interface
type MockCategoryFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryFetcherMockRecorder
}

// MockCategoryFetcherMockRecorder is the mock recorder for MockCategoryFetcher
type MockCategoryFetcherMockRecorder struct {
	mock *MockCategoryFetcher
}

// NewMockCategoryFetcher creates a new mock instance
func NewMockCategoryFetcher(ctrl *gomock.Controller) *MockCategoryFetcher {
	mock := &MockCategoryFetcher{ctrl: ctrl}
	mock.recorder = &MockCategoryFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCategoryFetcher) EXPECT() *MockCategoryFetcherMockRecorder {
	return m.recorder
}

// Fetch mocks base method
func (m *MockCategoryFetcher) Fetch(productName string) (CategoryInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", productName)
	ret0, _ := ret[0].(CategoryInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch
func (mr *MockCategoryFetcherMockRecorder) Fetch(productName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockCategoryFetcher)(nil).Fetch), productName)
}
